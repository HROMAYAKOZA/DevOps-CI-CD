name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
#   deploy-test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up SSH
#         uses: webfactory/ssh-agent@v0.5.4
#         with:
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Copy files to server
#         run: scp -r ./* username@your-server-ip:/testdir

#       # - name: SSH into server and start Docker Compose
#       #   run: |
#       #     ssh username@your-server-ip << 'EOF'
#       #       cd /path/to/remote/project
#       #       echo "Hello"
#       #     EOF
  deploy:
    runs-on: ubuntu-latest
    needs: Explore-GitHub-Actions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd testdir
          git pull origin main
          echo "done"



# name: Deploy to SSH Server

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Install SSH client
#       run: sudo apt-get install -y openssh-client

#     - name: Set up SSH
#       uses: webfactory/ssh-agent@v0.5.2
#       with:
#         ssh-private-key: ${{ secrets.DEPLOY_KEY }}

#     - name: Delete old files on the server
#       run: ssh ${{secrets.USER}}@${{secrets.VM_IP}} 'rm -rf /testdir'

#     - name: Copy new files to the server
#       run: scp -r ./* ${{secrets.USER}}@${{secrets.VM_IP}}:/testdir

#     - name: Execute post-copy commands on the server
#       run: ssh ${{secrets.USER}}@${{secrets.VM_IP}} 'cd /testdir && echo "hello"'
